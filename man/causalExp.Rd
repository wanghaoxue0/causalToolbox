% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ExmpleSetups_causaleffects.R
\docType{data}
\name{simulate Experiments}
\alias{simulate Experiments}
\alias{simulate_correlation_matrix}
\alias{simulate_causal_experiment}
\alias{pscores.simulate_causal_experiment}
\alias{mu0.simulate_causal_experiment}
\alias{tau.simulate_causal_experiment}
\title{Simulate a Causal Experiment}
\usage{
simulate_correlation_matrix(dim, alpha)

simulate_causal_experiment(
  ntrain = nrow(given_features),
  ntest = nrow(given_features),
  dim = ncol(given_features),
  alpha = 0.1,
  feat_distribution = "normal",
  given_features = NULL,
  pscore = "rct5",
  mu0 = "sparseLinearStrong",
  tau = "sparseLinearWeak",
  testseed = NULL,
  trainseed = NULL,
  noEffect = FALSE
)

pscores.simulate_causal_experiment

mu0.simulate_causal_experiment

tau.simulate_causal_experiment
}
\arguments{
\item{dim}{Dimension of the data set.}

\item{alpha}{Only used if \code{given_features} is not set and \code{feat_distribution} is
chosen to be normal. It specifies how correlated the features can be. If
alpha = 0, then the features are independent. If alpha is very large, then
the features can be very correlated. Use the
\code{simulate_correlation_matrix} function to get a better understanding
of the impact of alpha.}

\item{ntrain}{Number of training examples.}

\item{ntest}{Number of test examples.}

\item{feat_distribution}{Only used if \code{given_features} is not specified. Either
"normal" or "unif." It specifies the distribution of the features.}

\item{given_features}{This is used if we already have features and want to
test the performance of different estimators for a particular set of
features.}

\item{pscore, mu0, tau}{Parameters that determine the propensity score, the
response function for the control units, and tau, respectively. The
different options can be seen using
\code{names(pscores.simulate_causal_experiment)},
\code{names(mu0.simulate_causal_experiment)}, and
\code{names(tau.simulate_causal_experiment)}. This is implemented in this manner,
because it enables the user to easily loop through the different
estimators.}

\item{testseed}{The seed used to generate the test data. If NULL, then
the seed of the main session is used.}

\item{trainseed}{The seed used to generate the training data. If NULL,
then the seed of the main session is used.}

\item{noEffect}{Boolean flag to specify whether the experiment has 
no true effect. When this is set to TRUE, the U_0 function will be used
for both control and treated observations. When this is false, the U_0 
function will be used for control observations, and the U_1 functions will 
be used for treated observations. Default is FALSE.}
}
\value{
A correlation matrix.

A list with the following elements:
  \item{\code{setup_name}}{Name of the setup.}
  \item{\code{m_t_truth}}{Function containing the response function of the
  treated units.}
  \item{\code{m_c_truth}}{Function containing the response function of the
  control units.}
  \item{\code{propscore}}{Propensity score function.}
  \item{\code{alpha}}{Chosen alpha.}
  \item{\code{feat_te}}{Data.frame containing the features of the test
  samples.}
  \item{\code{W_te}}{Numeric vector containing the treatment assignment of
  the test samples.}
  \item{\code{tau_te}}{Numeric vector containing the true conditional average
  treatment effects of the test samples.}
  \item{\code{Yobs_te}}{Numeric vector containing the observed Y values of
  the test samples.}
  \item{\code{feat_tr}}{Data.frame containing the features of the training
  samples.}
  \item{\code{W_tr}}{Numeric vector containing the treatment assignment of
  the training samples.}
  \item{\code{tau_tr}}{Numeric vector containing the true conditional average
  treatment effects of the training samples.}
  \item{\code{Yobs_tr}}{Numeric vector containing the observed Y values of
  the training samples.}
}
\description{
\code{simulate_correlation_matrix} uses the C-vine method for
  simulating correlation matrices. (Refer to the referenced paper for details.)

\code{simulate_causal_experiment} simulates an RCT or observational data for causal
  effect estimation. It is mainly used to test different heterogenuous
  treatment effect estimation strategies.
}
\details{
The function simulates causal experiments by generating the
  features, treatment assignment, observed Y values, and CATE for
  a test set and a training set. pscore, mu0, and tau define the response
  functions and the propensity score. For example, \code{pscore =
  "osSparse1Linear"} specifies that \deqn{e(x) = max(0.05, min(.95, x1 / 2 +
  1 / 4))} and \code{mu0 ="sparseLinearWeak"} specifies that the response
  function for the control units is given by the simple linear function,
  \deqn{mu0(x) = 3 x1 + 5 x2.}
}
\examples{
require(causalToolbox)

ce_sim <- simulate_causal_experiment(
  ntrain = 20,
  ntest = 20,
  dim = 7
)

ce_sim

\dontrun{
estimators <- list(
  S_RF = S_RF,
  T_RF = T_RF,
  X_RF = X_RF,
  S_BART = S_BART,
  T_BART = T_BART,
  X_BARTT = X_BART)

performance <- data.frame()
for(tau_n in names(tau.simulate_causal_experiment)){
  for(mu0_n in names(mu0.simulate_causal_experiment)) {
    ce <- simulate_causal_experiment(
      given_features = iris,
      pscore = "rct5",
      mu0 = mu0_n,
      tau = tau_n)

    for(estimator_n in names(estimators)) {
      print(paste(tau_n, mu0_n, estimator_n))

      trained_e <- estimators[[estimator_n]](ce$feat_tr, ce$W_tr, ce$Yobs_tr)
      performance <-
        rbind(performance,
              data.frame(
                mu0 = mu0_n,
                tau = tau_n,
                estimator = estimator_n,
                MSE = mean((EstimateCate(trained_e, ce$feat_te) -
                            ce$tau_te)^2)))
    }
  }
}

reshape2::dcast(data = performance, mu0 + tau ~ estimator)
}
}
\references{
\itemize{
  \item Daniel Lewandowskia, Dorota Kurowickaa, Harry Joe (2009). Generating
  Random Correlation Matrices Based on Vines and Extended Onion Method.
  \item Sören Künzel, Jasjeet Sekhon, Peter Bickel, and Bin Yu (2017).
    Meta-learners for Estimating Heterogeneous Treatment Effects Using
    Machine Learning.
    }
}
\seealso{
\code{\link{X-Learner}}
}
\keyword{datasets}
